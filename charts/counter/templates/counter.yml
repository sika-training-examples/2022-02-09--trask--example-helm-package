apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    project: counter
spec:
  serviceName: redis
  selector:
    matchLabels:
      project: counter
      app: redis
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        project: counter
        app: redis
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: main
          image: redis
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 80Mi
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    project: counter
spec:
  ports:
    - port: 6379
  selector:
    project: counter
    app: redis
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-counter
  labels:
    project: counter
spec:
  selector:
    matchLabels:
      project: counter
      app: counter
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        project: counter
        app: counter
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: main
          image: ondrejsika/counter
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
            limits:
              cpu: 50m
              memory: 30Mi
          env:
            - name: REDIS
              value: {{ .Release.Name }}-redis
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-counter
  labels:
    project: counter
spec:
  type: NodePort
  ports:
    - port: 80
  selector:
    project: counter
    app: counter
    release: {{ .Release.Name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-counter
  labels:
    project: counter
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - hosts:
        - {{ .Values.host }}
      secretName: {{ .Release.Name }}-tls
  rules:
    - host: {{ required ".Values.host is required" .Values.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-counter
                port:
                  number: 80
